/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (-1.4611    -.16984     -0.050)         //0
    (-1.4611     .00000     -0.050)         //1
    ( .00000    -.35158     -0.050)         //2
    (-1.4611     .16984     -0.050)         //3
    ( .00000     .00000     -0.050)         //4
    ( .00000     .35158     -0.050)         //5
    ( .00000    1.09220     -0.050)         //6
    ( .00000   -1.09220     -0.050)         //7

    ( .60400    1.09220     -0.050)         //8 
    ( .60400     .50000     -0.050)         //9 
    ( .60400    -0.14064    -0.050)         //10
    ( .43400   -1.03363     -0.050)         //11
    ( .43400   -1.59220     -0.050)         //12
    ( .77400   -1.03363     -0.050)         //13
    ( .77400   -1.59220     -0.050)         //14    
    (6.00000    1.09220     -0.050)         //15
    (6.00000     .35158     -0.050)         //16
  
    (6.00000     .00000     -0.050)         //17
    (6.00000    -.35158     -0.050)         //18
    (6.00000   -1.09220     -0.050)         //19
                                            

    (-1.4611    -.16984      0.050)         //20
    (-1.4611     .00000      0.050)         //21
    ( .00000    -.35158      0.050)         //22
    (-1.4611     .16984      0.050)         //23
    ( .00000     .00000      0.050)         //24
    ( .00000     .35158      0.050)         //25
    ( .00000    1.09220      0.050)         //26
    ( .00000   -1.09220      0.050)         //27

    ( .60400    1.09220      0.050)         //28
    ( .60400     .50000      0.050)         //29
    ( .60400    -0.14064     0.050)         //30
    ( .43400   -1.03363      0.050)         //31
    ( .43400   -1.59220      0.050)         //32
    ( .77400   -1.03363      0.050)         //33
    ( .77400   -1.59220      0.050)         //34    
    (6.00000    1.09220      0.050)         //35
    (6.00000     .35158      0.050)         //36
 
    (6.00000     .00000      0.050)         //37
    (6.00000    -.35158      0.050)         //38
    (6.00000   -1.09220      0.050)         //49
                                            

    (-1.0000   -2.09220     -0.050)         //40
    (-1.0000   -2.80000     -0.050)         //41
    ( 0.0000   -2.80000     -0.050)         //42
    (  .4340   -2.80000     -0.050)         //43
    (  .7740   -2.80000     -0.050)         //44
    ( 6.0000   -2.80000     -0.050)         //45

    (-1.0000   -2.09220      0.050)         //46
    (-1.0000   -2.80000      0.050)         //47
    ( 0.0000   -2.80000      0.050)         //48
    (  .4340   -2.80000      0.050)         //49
    (  .7740   -2.80000      0.050)         //50
    ( 6.0000   -2.80000      0.050)         //51

    (-1.0000    2.09220     -0.050)         //52
    (-1.0000    2.80000     -0.050)         //53
    ( 0.0000    2.80000     -0.050)         //54
    ( 0.6040    2.80000     -0.050)         //55
    ( 6.0000    2.80000     -0.050)         //56

    (-1.0000    2.09220      0.050)         //57
    (-1.0000    2.80000      0.050)         //58
    ( 0.0000    2.80000      0.050)         //59
    ( 0.6040    2.80000      0.050)         //60
    ( 6.0000    2.80000      0.050)         //61

    (-2.0000    0.43750     -0.050)         //62
    (-2.0000    0.00000     -0.050)         //63
    (-2.0000   -0.43750     -0.050)         //64
    (-2.0000    0.43750      0.050)         //65
    (-2.0000    0.00000      0.050)         //66
    (-2.0000   -0.43750      0.050)         //67
  


);          

blocks
(
    hex ( 0  2  4  1 20 22 24 21) (100 25 1) simpleGrading (1 1 1)
    hex ( 1  4  5  3 21 24 25 23) (100 25 1) simpleGrading (1 1 1)

    hex ( 7 12 11  2 27 32 31 22) (30 25 1) simpleGrading (1 1 1)
    hex ( 2 11 10  4 22 31 30 24) (30 25 1) simpleGrading (1 1 1)
    hex ( 4 10  9  5 24 30 29 25) (30 25 1) simpleGrading (1 1 1)
    hex ( 5  9  8  6 25 29 28 26) (30 25 1) simpleGrading (1 1 1)

    hex ( 9 16 15  8 29 36 35 28) (150 25 1) simpleGrading (1 1 1)
    hex (10 17 16  9 30 37 36 29) (150 25 1) simpleGrading (1 1 1)
    hex (13 18 17 10 33 38 37 30) (150 25 1) simpleGrading (1 1 1)
    hex (14 19 18 13 34 39 38 33) (150 25 1) simpleGrading (1 1 1)

    hex (41 42  7 40 47 48 27 46) (60 60 1) simpleGrading (1 1 1)
    hex (42 43 12  7 48 49 32 27) (30 60 1) simpleGrading (1 1 1)
    hex (44 45 19 14 50 51 39 34) (150 60 1) simpleGrading (1 1 1)

    hex (52  6 54 53 57 26 59 58) (60 60 1) simpleGrading (1 1 1)
    hex ( 6  8 55 54 26 28 60 59) (30 60 1) simpleGrading (1 1 1)
    hex ( 8 15 56 55 28 35 61 60) (150 60 1) simpleGrading (1 1 1)

    hex (64  0  1 63 67 20 21 66) (100 25 1) simpleGrading (1 1 1)
    hex (63  1  3 62 66 21 23 65) (100 25 1) simpleGrading (1 1 1)
    
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (64 67 66 63)
            (63 66 65 62)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (16 15 35 36)
            (17 16 36 37)
            (18 17 37 38)
            (19 18 38 39)
            (40 41 47 46)
            (41 42 48 47)
            (42 43 49 48)
            (44 45 51 50)
            (45 19 39 51)
            (53 52 57 58)
            (54 53 58 59)
            (55 54 59 60)
            (56 55 60 61)
            (15 56 61 35)


        );
    }

    obstacle
    {
        type patch;
        faces
        (
            (52  6 26 57)
            ( 6  5 25 26)
            ( 5  3 23 25)
            ( 0  2 22 20)        
            (12 11 31 32)
            (11 10 30 31)
            (10 13 33 30)
            (13 14 34 33)
            ( 2  7 27 22)
            ( 7 40 46 27)
            (43 12 32 49)
            (14 44 50 34)
            (62 65 23  3)
            (64  0 20 67)

        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
