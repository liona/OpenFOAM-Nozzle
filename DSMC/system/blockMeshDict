/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1e-6;

vertices
(
    (100 0 -1)  //0
    (300 0 -1)	//1
    (82.4 100 -1) //2
    (130 100 -1)	//3
    (300 100 -1)	//4
    (26.1 136.7 -1)	//5
    (26.1 151.8 -1)	//6
	(82.4 188 -1) //7
    (100 200 -1)	//8
	(300 200 -1)	//9
	(100 300 -1)	//10
	(300 300 -1)	//11
	(100 0 1)
    (300 0 1)
    (82.4 100 1)
    (130 100 1)
    (300 100 1)
    (26.1 136.7 1)
    (26.1 151.8 1)
	(82.4 188 1)
    (100 200 1)
	(300 200 1)
	(100 300 1)
	(300 300 1)
);

blocks
(
    hex (0 1 4 3 12 13 16 15) (32 16 1) simpleGrading (1 1 1)
	hex (5 2 7 6 17 14 19 18) (16 16 1) simpleGrading (1 1 1)
	hex (2 3 8 7 14 15 20 19) (8 16 1) simpleGrading (1 1 1)
    hex (3 4 9 8 15 16 21 20) (32 16 1) simpleGrading (1 1 1)
    hex (8 9 11 10 20 21 23 22) (32 16 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    flow
    {
        type patch;
        faces
        (
            (5 17 18 6) //inlet
			(1 4 16 13) //outlet
			(4 9 21 16)
			(9 11 23 21)
			
			
			
			
        );
    }
    obstacle
    {
        type wall;
        faces
        (
            (5 2 14 17)
			(2 3 15 14)
			(6 18 19 7)
			(7 19 20 8)
			(0 12 15 3)
			(8 20 22 10)
			
			(0 1 13 12)//sides
			(10 22 23 11)
			
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 4 1) //front
			(3 8 9 4)
			(8 10 11 9)
			(2 7 8 3)
			(5 6 7 2)
			(12 13 16 15) //back
			(15 16 21 20)
			(20 21 23 22)
			(14 15 20 19)
			(17 14 19 18)
		);
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
