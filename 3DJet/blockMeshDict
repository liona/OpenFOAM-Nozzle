/*--------------------------------*- C++ -*----------------------------------*/

// File was generated by SwiftBlock, a Blender 3D addon.

FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1e-3;

//origin
cx 0.0;
cy 0.0;
cz 0.0;

//nozzle (numbers must be divisble by resolution twice)
r1 0.25; //inlet radius
r2 0.40; //nozzle exit radius
nozzleheight 1.3;
r3 1.0; //nozzle outer top
r4 2.0; //nozzle outer bottom
wallheight 1.0; //nozzle outer top

//blade
bladeheight 1.0; //blade height above nozzle
cover 0.00; //in mm
bladethickness 0.08;
sharpness 0.08;

//bounding cylinder
r5 3; //bounding cylinder radius
cylinderheight 6;

//---calculations
dblade #calc "$cover - $r2"; //displacement from center i.e 50% cover.  positie is increasing cover
nozzleh #calc "$nozzleheight+$cz"; //nozzle height
wh #calc "$nozzleh-$wallheight"; //bottom of space
bladeh #calc "$nozzleh+$bladeheight";
dbladetip #calc "$dblade+$sharpness";
cylinderh #calc "$cylinderheight+$nozzleh";

bladey #calc "sqrt(($r5+$dblade*cos(M_PI/4))*($r5 - $dblade*cos(M_PI/4)))";
bladetipy #calc "sqrt(($r5+($dblade+$sharpness)*cos(M_PI/4))*($r5-($dblade+$sharpness)*cos(M_PI/4)))";
centerliner5 #calc "sqrt(($r5-($r5*cos(M_PI/4) - $dblade*cos(M_PI/4)))*($r5+($r5*cos(M_PI/4) - $dblade*cos(M_PI/4))))";
centerliner5tip #calc "sqrt(($r5-($r5*cos(M_PI/4)-($dblade+$sharpness)*cos(M_PI/4)))*($r5+($r5*cos(M_PI/4)-($dblade+$sharpness)*cos(M_PI/4))))";
bladecenter #calc "$bladeh+$bladethickness/2";
bladetop #calc "$bladeh+$bladethickness";
//----Resolution
resolution 0.01;
dr 0.02; //polygon inset
r1p #calc "$r1-$dr";
r2p #calc "$r2-$dr";
npolygon #calc "$r2/$resolution";
drres #calc "$dr/$resolution";
r5r3res #calc "($r5-$r3)/$resolution";
r3r2res #calc "($r3-$r2)/$resolution";
r5r2res #calc "($r5-$r2)/$resolution";
r5r2pres #calc "($r5-$r2p)/$resolution";
nozzlehres #calc "$nozzleheight/$resolution";
bladehres #calc "($bladeheight)/$resolution";
wallhres #calc "$wallheight/$resolution";
bladethicknessres #calc "$bladethickness/(2*$resolution)";
cylinderhres #calc "$cylinderheight/$resolution";

//repetitive calculations
bladex #calc "$cx - $dblade";
r3dblade45x #calc "$cx + $r3*cos(M_PI/4) - $dblade";
r3dblade135x #calc "$cx - $r3*cos(M_PI/4) - $dblade";

//---Mesh Generation
vertices
(
  //nozzle polyhedron
  (#calc "$cx+$r1p" $cy $cz)                                       //0 inlet
  (#calc "$cx+$r1p*cos(M_PI/4)" #calc "$cy+$r1p*cos(M_PI/4)" $cz)   //1
  ($cx #calc "$cy+$r1p" $cz)                                       //2
  (#calc "$cx-$r1p*cos(M_PI/4)" #calc "$cy+$r1p*cos(M_PI/4)" $cz)   //3
  (#calc "$cx-$r1p" $cy $cz)                                       //4
  (#calc "$cx-$r1p*cos(M_PI/4)" #calc "$cy-$r1p*cos(M_PI/4)" $cz)   //5
  ($cx #calc "$cy-$r1p" $cz)                                       //6
  (#calc "$cx+$r1p*cos(M_PI/4)" #calc "$cy-$r1p*cos(M_PI/4)" $cz)   //7

  ($cx $cy $cz)                                               //8
  ($cx $cy $nozzleh)                                          //9

  (#calc "$cx+$r2p" $cy $nozzleh)                                      //10 outlet
  (#calc "$cx+$r2p*cos(M_PI/4)" #calc "$cy+$r2p*cos(M_PI/4)" $nozzleh)  //11
  ($cx #calc "$cy+$r2p" $nozzleh)                                      //12
  (#calc "$cx-$r2p*cos(M_PI/4)" #calc "$cy+$r2p*cos(M_PI/4)" $nozzleh)  //13
  (#calc "$cx-$r2p" $cy $nozzleh)                                      //14
  (#calc "$cx-$r2p*cos(M_PI/4)" #calc "$cy-$r2p*cos(M_PI/4)" $nozzleh)  //15
  ($cx #calc "$cy-$r2p" $nozzleh)                                      //16
  (#calc "$cx+$r2p*cos(M_PI/4)" #calc "$cy-$r2p*cos(M_PI/4)" $nozzleh)  //17
//nozzle cone
  (#calc "$cx+$r1" $cy $cz)                                       //18 inlet
  (#calc "$cx+$r1*cos(M_PI/4)" #calc "$cy+$r1*cos(M_PI/4)" $cz)   //19
  ($cx #calc "$cy+$r1" $cz)                                       //20
  (#calc "$cx-$r1*cos(M_PI/4)" #calc "$cy+$r1*cos(M_PI/4)" $cz)   //21
  (#calc "$cx-$r1" $cy $cz)                                       //22
  (#calc "$cx-$r1*cos(M_PI/4)" #calc "$cy-$r1*cos(M_PI/4)" $cz)   //23
  ($cx #calc "$cy-$r1" $cz)                                       //24
  (#calc "$cx+$r1*cos(M_PI/4)" #calc "$cy-$r1*cos(M_PI/4)" $cz)   //25

  (#calc "$cx+$r2" $cy $nozzleh)                                      //26 outlet
  (#calc "$cx+$r2*cos(M_PI/4)" #calc "$cy+$r2*cos(M_PI/4)" $nozzleh)  //27
  ($cx #calc "$cy+$r2" $nozzleh)                                      //28
  (#calc "$cx-$r2*cos(M_PI/4)" #calc "$cy+$r2*cos(M_PI/4)" $nozzleh)  //29
  (#calc "$cx-$r2" $cy $nozzleh)                                      //30
  (#calc "$cx-$r2*cos(M_PI/4)" #calc "$cy-$r2*cos(M_PI/4)" $nozzleh)  //31
  ($cx #calc "$cy-$r2" $nozzleh)                                      //32
  (#calc "$cx+$r2*cos(M_PI/4)" #calc "$cy-$r2*cos(M_PI/4)" $nozzleh)  //33

  //nozzle walls

   (#calc "$cx+$r4" $cy $wh)                                       //34 walls bottom
  (#calc "$cx+$r4*cos(M_PI/4)" #calc "$cy+$r4*cos(M_PI/4)" $wh)   //35
  ($cx #calc "$cy+$r4" $wh)                                       //36
  (#calc "$cx-$r4*cos(M_PI/4)" #calc "$cy+$r4*cos(M_PI/4)" $wh)   //37
  (#calc "$cx-$r4" $cy $wh)                                       //38
  (#calc "$cx-$r4*cos(M_PI/4)" #calc "$cy-$r4*cos(M_PI/4)" $wh)   //39
  ($cx #calc "$cy-$r4" $wh)                                       //40
  (#calc "$cx+$r4*cos(M_PI/4)" #calc "$cy-$r4*cos(M_PI/4)" $wh)   //41

  (#calc "$cx+$r3" $cy $nozzleh)                                      //42 walls top
  (#calc "$cx+$r3*cos(M_PI/4)" #calc "$cy+$r3*cos(M_PI/4)" $nozzleh)  //43
  ($cx #calc "$cy+$r3" $nozzleh)                                      //44
  (#calc "$cx-$r3*cos(M_PI/4)" #calc "$cy+$r3*cos(M_PI/4)" $nozzleh)  //45
  (#calc "$cx-$r3" $cy $nozzleh)                                      //46
  (#calc "$cx-$r3*cos(M_PI/4)" #calc "$cy-$r3*cos(M_PI/4)" $nozzleh)  //47
  ($cx #calc "$cy-$r3" $nozzleh)                                      //48
  (#calc "$cx+$r3*cos(M_PI/4)" #calc "$cy-$r3*cos(M_PI/4)" $nozzleh)  //49

  (#calc "$cx+$r5" $cy $wh)                                       //50 space bottom
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $wh)   //51
  ($cx #calc "$cy+$r5" $wh)                                       //52
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $wh)   //53
  (#calc "$cx-$r5" $cy $wh)                                       //54
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $wh)   //55
  ($cx #calc "$cy-$r5" $wh)                                       //56
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $wh)   //57

  (#calc "$cx+$r5" $cy $nozzleh)                                      //58 space top
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $nozzleh)  //59
  ($cx #calc "$cy+$r5" $nozzleh)                                      //60
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $nozzleh)  //61
  (#calc "$cx-$r5" $cy $nozzleh)                                      //62
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $nozzleh)  //63
  ($cx #calc "$cy-$r5" $nozzleh)                                      //64
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $nozzleh)  //65

  //blade bottom
  ($bladex $cy $bladeh)                                            //66 center

  (#calc "$cx+$r2p - $dblade" $cy $bladeh)                                       //67 polyhedrom
  (#calc "$cx+$r2p*cos(M_PI/4) - $dblade" #calc "$cy+$r2p*cos(M_PI/4)" $bladeh)  //68
  ($bladex #calc "$cy+$r2p" $bladeh)                               //69
  (#calc "$cx-$r2p*cos(M_PI/4) - $dblade" #calc "$cy+$r2p*cos(M_PI/4)" $bladeh)  //70
  (#calc "$cx-$r2p - $dblade" $cy $bladeh)                                       //71
  (#calc "$cx-$r2p*cos(M_PI/4) - $dblade" #calc "$cy-$r2p*cos(M_PI/4)" $bladeh)  //72
  ($bladex #calc "$cy-$r2p" $bladeh)                               //73
  (#calc "$cx+$r2p*cos(M_PI/4) - $dblade" #calc "$cy-$r2p*cos(M_PI/4)" $bladeh)  //74

  (#calc "$cx+$r5" $cy $bladeh)                                      //75 circular parts
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $bladeh)  //76
  ($bladex #calc "$cy+$bladey" $bladeh)                 //77
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $bladeh)  //78
  (#calc "$cx-$r5" $cy $bladeh)                                      //79
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $bladeh)  //80
  ($bladex #calc "$cy-$bladey" $bladeh)                  //81
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $bladeh)  //82

  //Blade blade tip
  (#calc "$cx - $dbladetip" $cy $bladecenter)                                            //83 center

  (#calc "$cx+$r2p - $dbladetip" $cy $bladecenter)                                       //84 polyhedrom
  (#calc "$cx+$r2p*cos(M_PI/4) - $dbladetip" #calc "$cy+$r2p*cos(M_PI/4)" $bladecenter)  //85
  (#calc "$cx - $dbladetip" #calc "$cy+$r2p" $bladecenter)                               //86
  (#calc "$cx-$r2p*cos(M_PI/4) - $dbladetip" #calc "$cy+$r2p*cos(M_PI/4)" $bladecenter)  //87
  (#calc "$cx-$r2p - $dbladetip" $cy $bladecenter)                                       //88
  (#calc "$cx-$r2p*cos(M_PI/4) - $dbladetip" #calc "$cy-$r2p*cos(M_PI/4)" $bladecenter)  //89
  (#calc "$cx - $dbladetip" #calc "$cy-$r2p" $bladecenter)                               //90
  (#calc "$cx+$r2p*cos(M_PI/4) - $dbladetip" #calc "$cy-$r2p*cos(M_PI/4)" $bladecenter)  //91

  (#calc "$cx+$r5" $cy $bladecenter)                                      //92 circular parts
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $bladecenter)  //93
  (#calc "$cx - $dbladetip" #calc "$cy+$bladetipy" $bladecenter)            //94
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $bladecenter)  //95
  (#calc "$cx-$r5" $cy $bladecenter)                                      //96
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $bladecenter)  //97
  (#calc "$cx - $dbladetip" #calc "$cy-$bladetipy" $bladecenter)            //98
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $bladecenter)  //99

  //Blade top
  ($bladex $cy $bladetop)                                            //100 center

  (#calc "$cx+$r2p - $dblade" $cy $bladetop)                                       //101 polyhedrom
  (#calc "$cx+$r2p*cos(M_PI/4) - $dblade" #calc "$cy+$r2p*cos(M_PI/4)" $bladetop)  //102
  ($bladex #calc "$cy+$r2p" $bladetop)                               //103
  (#calc "$cx-$r2p*cos(M_PI/4) - $dblade" #calc "$cy+$r2p*cos(M_PI/4)" $bladetop)  //104
  (#calc "$cx-$r2p - $dblade" $cy $bladetop)                                       //105
  (#calc "$cx-$r2p*cos(M_PI/4) - $dblade" #calc "$cy-$r2p*cos(M_PI/4)" $bladetop)  //106
  ($bladex #calc "$cy-$r2p" $bladetop)                               //107
  (#calc "$cx+$r2p*cos(M_PI/4) - $dblade" #calc "$cy-$r2p*cos(M_PI/4)" $bladetop)  //108

  (#calc "$cx+$r5" $cy $bladetop)                                      //109 circular parts
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $bladetop)  //110
  ($bladex #calc "$cy+$bladey" $bladetop)                 //111
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $bladetop)  //112
  (#calc "$cx-$r5" $cy $bladetop)                                      //113
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $bladetop)  //114
  ($bladex #calc "$cy-$bladey" $bladetop)                  //115
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $bladetop)  //116

  //cylinder top
  ($bladex $cy $cylinderh)                                            //117 center

  (#calc "$cx+$r2p - $dblade" $cy $cylinderh)                                       //118 polyhedrom
  (#calc "$cx+$r2p*cos(M_PI/4) - $dblade" #calc "$cy+$r2p*cos(M_PI/4)" $cylinderh)  //119
  ($bladex #calc "$cy+$r2p" $cylinderh)                               //120
  (#calc "$cx-$r2p*cos(M_PI/4) - $dblade" #calc "$cy+$r2p*cos(M_PI/4)" $cylinderh)  //121
  (#calc "$cx-$r2p - $dblade" $cy $cylinderh)                                       //122
  (#calc "$cx-$r2p*cos(M_PI/4) - $dblade" #calc "$cy-$r2p*cos(M_PI/4)" $cylinderh)  //123
  ($bladex #calc "$cy-$r2p" $cylinderh)                               //124
  (#calc "$cx+$r2p*cos(M_PI/4) - $dblade" #calc "$cy-$r2p*cos(M_PI/4)" $cylinderh)  //125

  (#calc "$cx+$r5" $cy $cylinderh)                                      //126 circular parts
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $cylinderh)  //127
  ($bladex #calc "$cy+$bladey" $cylinderh)                 //128
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy+$r5*cos(M_PI/4)" $cylinderh)  //129
  (#calc "$cx-$r5" $cy $cylinderh)                                      //130
  (#calc "$cx-$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $cylinderh)  //131
  ($bladex #calc "$cy-$bladey" $cylinderh)                  //132
  (#calc "$cx+$r5*cos(M_PI/4)" #calc "$cy-$r5*cos(M_PI/4)" $cylinderh)  //133

  //patch points outside of polyhedron column to transition nozzle surface up
  (#calc "$cx+$r2 - $dblade" $cy $bladeh)                                      //134 outer ploygon at blade bottom
  (#calc "$cx+$r2*cos(M_PI/4) - $dblade" #calc "$cy+$r2*cos(M_PI/4)" $bladeh)  //135
  ($bladex #calc "$cy+$r2" $bladeh)                              //136
  (#calc "$cx-$r2*cos(M_PI/4) - $dblade" #calc "$cy+$r2*cos(M_PI/4)" $bladeh)  //137
  (#calc "$cx-$r2 - $dblade" $cy $bladeh)                                      //138
  (#calc "$cx-$r2*cos(M_PI/4) - $dblade" #calc "$cy-$r2*cos(M_PI/4)" $bladeh)  //139
  ($bladex #calc "$cy-$r2" $bladeh)                              //140
  (#calc "$cx+$r2*cos(M_PI/4) - $dblade" #calc "$cy-$r2*cos(M_PI/4)" $bladeh)  //141

  (#calc "$cx+$r2 - $dbladetip" $cy $bladecenter)                                      //142 outer polyhedrom at center of blade
  (#calc "$cx+$r2*cos(M_PI/4) - $dbladetip" #calc "$cy+$r2*cos(M_PI/4)" $bladecenter)  //143
  (#calc "$cx - $dbladetip" #calc "$cy+$r2" $bladecenter)                              //144
  (#calc "$cx-$r2*cos(M_PI/4) - $dbladetip" #calc "$cy+$r2*cos(M_PI/4)" $bladecenter)  //145
  (#calc "$cx-$r2 - $dbladetip" $cy $bladecenter)                                      //146
  (#calc "$cx-$r2*cos(M_PI/4) - $dbladetip" #calc "$cy-$r2*cos(M_PI/4)" $bladecenter)  //147
  (#calc "$cx - $dbladetip" #calc "$cy-$r2" $bladecenter)                              //148
  (#calc "$cx+$r2*cos(M_PI/4) - $dbladetip" #calc "$cy-$r2*cos(M_PI/4)" $bladecenter)  //149

  (#calc "$cx+$r2 - $dblade" $cy $bladetop)                                      //150 outer polygon at top of blade
  (#calc "$cx+$r2*cos(M_PI/4) - $dblade" #calc "$cy+$r2*cos(M_PI/4)" $bladetop)  //151
  ($bladex #calc "$cy+$r2" $bladetop)                               //152
  (#calc "$cx-$r2*cos(M_PI/4) - $dblade" #calc "$cy+$r2*cos(M_PI/4)" $bladetop)  //153
  (#calc "$cx-$r2 - $dblade" $cy $bladetop)                                       //154
  (#calc "$cx-$r2*cos(M_PI/4) - $dblade" #calc "$cy-$r2*cos(M_PI/4)" $bladetop)  //155
  ($bladex #calc "$cy-$r2" $bladetop)                               //156
  (#calc "$cx+$r2*cos(M_PI/4) - $dblade" #calc "$cy-$r2*cos(M_PI/4)" $bladetop)  //157

  (#calc "$cx+$r2 - $dblade" $cy $cylinderh)                                      //158 outer polyhedron at cylinder top
  (#calc "$cx+$r2*cos(M_PI/4) - $dblade" #calc "$cy+$r2*cos(M_PI/4)" $cylinderh)  //159
  ($bladex #calc "$cy+$r2" $cylinderh)                               //160
  (#calc "$cx-$r2*cos(M_PI/4) - $dblade" #calc "$cy+$r2*cos(M_PI/4)" $cylinderh)  //161
  (#calc "$cx-$r2 - $dblade" $cy $cylinderh)                                       //162
  (#calc "$cx-$r2*cos(M_PI/4) - $dblade" #calc "$cy-$r2*cos(M_PI/4)" $cylinderh)  //163
  ($bladex #calc "$cy-$r2" $cylinderh)                               //164
  (#calc "$cx+$r2*cos(M_PI/4) - $dblade" #calc "$cy-$r2*cos(M_PI/4)" $cylinderh)  //165

  //r2 to r3
  (#calc "$cx+$r3 - $dblade" $cy $bladeh)                                      //166 r3 circle at blade bottom
  ($r3dblade45x #calc "$cy+$r3*cos(M_PI/4)" $bladeh)  //167
  ($bladex #calc "$cy+$r3" $bladeh)                              //168
  ($r3dblade135x #calc "$cy+$r3*cos(M_PI/4)" $bladeh)  //169
  (#calc "$cx-$r3 - $dblade" $cy $bladeh)                                      //170
  ($r3dblade135x #calc "$cy-$r3*cos(M_PI/4)" $bladeh)  //171
  ($bladex #calc "$cy-$r3" $bladeh)                              //172
  ($r3dblade45x #calc "$cy-$r3*cos(M_PI/4)" $bladeh)  //173

  (#calc "$cx+$r3 - $dbladetip" $cy $bladecenter)                                      //174 r3 at blade tip
  (#calc "$cx+$r3*cos(M_PI/4) - $dbladetip" #calc "$cy+$r3*cos(M_PI/4)" $bladecenter)  //175
  (#calc "$cx - $dbladetip" #calc "$cy+$r3" $bladecenter)                              //176
  (#calc "$cx-$r3*cos(M_PI/4) - $dbladetip" #calc "$cy+$r3*cos(M_PI/4)" $bladecenter)  //177
  (#calc "$cx-$r3 - $dbladetip" $cy $bladecenter)                                      //178
  (#calc "$cx-$r3*cos(M_PI/4) - $dbladetip" #calc "$cy-$r3*cos(M_PI/4)" $bladecenter)  //179
  (#calc "$cx - $dbladetip" #calc "$cy-$r3" $bladecenter)                              //180
  (#calc "$cx+$r3*cos(M_PI/4) - $dbladetip" #calc "$cy-$r3*cos(M_PI/4)" $bladecenter)  //181

  (#calc "$cx+$r3 - $dblade" $cy $bladetop)                                      //182 r3 at top of blade
  ($r3dblade45x #calc "$cy+$r3*cos(M_PI/4)" $bladetop)  //183
  ($bladex #calc "$cy+$r3" $bladetop)                               //184
  ($r3dblade135x #calc "$cy+$r3*cos(M_PI/4)" $bladetop)  //185
  (#calc "$cx-$r3 - $dblade" $cy $bladetop)                                       //186
  ($r3dblade135x #calc "$cy-$r3*cos(M_PI/4)" $bladetop)  //187
  ($bladex #calc "$cy-$r3" $bladetop)                               //188
  ($r3dblade45x #calc "$cy-$r3*cos(M_PI/4)" $bladetop)  //189

  (#calc "$cx+$r3 - $dblade" $cy $cylinderh)                                      //190 r3 at cylinder top
  ($r3dblade45x #calc "$cy+$r3*cos(M_PI/4)" $cylinderh)  //191
  ($bladex #calc "$cy+$r3" $cylinderh)                               //192
  ($r3dblade135x #calc "$cy+$r3*cos(M_PI/4)" $cylinderh)  //193
  (#calc "$cx-$r3 - $dblade" $cy $cylinderh)                                       //194
  ($r3dblade135x #calc "$cy-$r3*cos(M_PI/4)" $cylinderh)  //195
  ($bladex #calc "$cy-$r3" $cylinderh)                               //196
  ($r3dblade45x #calc "$cy-$r3*cos(M_PI/4)" $cylinderh)  //197

);

blocks
( //Faces point up
//Nozzle ()
  hex (0 1 2 8 10 11 12 9) ($npolygon $npolygon $nozzlehres) simpleGrading (1 1 1) //polyhedrom
  hex (2 3 4 8 12 13 14 9) ($npolygon $npolygon $nozzlehres) simpleGrading (1 1 1)
  hex (4 5 6 8 14 15 16 9) ($npolygon $npolygon $nozzlehres) simpleGrading (1 1 1)
  hex (6 7 0 8 16 17 10 9) ($npolygon $npolygon $nozzlehres) simpleGrading (1 1 1)

  hex (18 19 1 0 26 27 11 10) ($npolygon $drres $nozzlehres) simpleGrading (1 1 1) //outside cylinder
  hex (19 20 2 1 27 28 12 11) ($npolygon $drres $nozzlehres) simpleGrading (1 1 1)
  hex (20 21 3 2 28 29 13 12) ($npolygon $drres $nozzlehres) simpleGrading (1 1 1)
  hex (21 22 4 3 29 30 14 13) ($npolygon $drres $nozzlehres) simpleGrading (1 1 1)
  hex (22 23 5 4 30 31 15 14) ($npolygon $drres $nozzlehres) simpleGrading (1 1 1)
  hex (23 24 6 5 31 32 16 15) ($npolygon $drres $nozzlehres) simpleGrading (1 1 1)
  hex (24 25 7 6 32 33 17 16) ($npolygon $drres $nozzlehres) simpleGrading (1 1 1)
  hex (25 18 0 7 33 26 10 17) ($npolygon $drres $nozzlehres) simpleGrading (1 1 1) //12
// nozzle to blade
  hex (10 11 12 9 67 68 69 66) ($npolygon $npolygon $bladehres) simpleGrading (1 1 1) //polygon
  hex (12 13 14 9 69 70 71 66) ($npolygon $npolygon $bladehres) simpleGrading (1 1 1)
  hex (14 15 16 9 71 72 73 66) ($npolygon $npolygon $bladehres) simpleGrading (1 1 1)
  hex (16 17 10 9 73 74 67 66) ($npolygon $npolygon $bladehres) simpleGrading (1 1 1)

  hex (26 27 11 10 134 135 68 67) ($npolygon $drres $bladehres) simpleGrading (1 1 1) //around polygon
  hex (27 28 12 11 135 136 69 68) ($npolygon $drres $bladehres) simpleGrading (1 1 1)
  hex (28 29 13 12 136 137 70 69) ($npolygon $drres $bladehres) simpleGrading (1 1 1)
  hex (29 30 14 13 137 138 71 70) ($npolygon $drres $bladehres) simpleGrading (1 1 1)
  hex (30 31 15 14 138 139 72 71) ($npolygon $drres $bladehres) simpleGrading (1 1 1)
  hex (31 32 16 15 139 140 73 72) ($npolygon $drres $bladehres) simpleGrading (1 1 1)
  hex (32 33 17 16 140 141 74 73) ($npolygon $drres $bladehres) simpleGrading (1 1 1)
  hex (33 26 10 17 141 134 67 74) ($npolygon $drres $bladehres) simpleGrading (1 1 1) //24

  hex (42 43 27 26 166 167 135 134) ($npolygon $r3r2res $bladehres) simpleGrading (1 1 1) //circular parts r2 to r3
  hex (43 44 28 27 167 168 136 135) ($npolygon $r3r2res $bladehres) simpleGrading (1 1 1)
  hex (44 45 29 28 168 169 137 136) ($npolygon $r3r2res $bladehres) simpleGrading (1 1 1)
  hex (45 46 30 29 169 170 138 137) ($npolygon $r3r2res $bladehres) simpleGrading (1 1 1)
  hex (46 47 31 30 170 171 139 138) ($npolygon $r3r2res $bladehres) simpleGrading (1 1 1)
  hex (47 48 32 31 171 172 140 139) ($npolygon $r3r2res $bladehres) simpleGrading (1 1 1)
  hex (48 49 33 32 172 173 141 140) ($npolygon $r3r2res $bladehres) simpleGrading (1 1 1)
  hex (49 42 26 33 173 166 134 141) ($npolygon $r3r2res $bladehres) simpleGrading (1 1 1) //32

  hex (58 59 43 42 75 76 167 166) ($npolygon $r5r3res $bladehres) simpleGrading (1 1 1) //circular parts r3 to r5
  hex (59 60 44 43 76 77 168 167) ($npolygon $r5r3res $bladehres) simpleGrading (1 1 1)
  hex (60 61 45 44 77 78 169 168) ($npolygon $r5r3res $bladehres) simpleGrading (1 1 1)
  hex (61 62 46 45 78 79 170 169) ($npolygon $r5r3res $bladehres) simpleGrading (1 1 1)
  hex (62 63 47 46 79 80 171 170) ($npolygon $r5r3res $bladehres) simpleGrading (1 1 1)
  hex (63 64 48 47 80 81 172 171) ($npolygon $r5r3res $bladehres) simpleGrading (1 1 1)
  hex (64 65 49 48 81 82 173 172) ($npolygon $r5r3res $bladehres) simpleGrading (1 1 1)
  hex (65 58 42 49 82 75 166 173) ($npolygon $r5r3res $bladehres) simpleGrading (1 1 1) //32


  //blade bottom to blade center
  //hex (67 68 69 66 84 85 86 83) ($npolygon $npolygon $bladethicknessres) simpleGrading (1 1 1)
  hex (69 70 71 66 86 87 88 83) ($npolygon $npolygon $bladethicknessres) simpleGrading (1 1 1) //half polygon
  hex (71 72 73 66 88 89 90 83) ($npolygon $npolygon $bladethicknessres) simpleGrading (1 1 1)

  hex (136 137 70 69 144 145 87 86) ($npolygon $drres $bladethicknessres) simpleGrading (1 1 1) //r2
  hex (137 138 71 70 145 146 88 87) ($npolygon $drres $bladethicknessres) simpleGrading (1 1 1)
  hex (138 139 72 71 146 147 89 88) ($npolygon $drres $bladethicknessres) simpleGrading (1 1 1)
  hex (139 140 73 72 147 148 90 89) ($npolygon $drres $bladethicknessres) simpleGrading (1 1 1)

  hex (168 169 137 136 176 177 145 144) ($npolygon $r3r2res $bladethicknessres) simpleGrading (1 1 1) //r3
  hex (169 170 138 137 177 178 146 145) ($npolygon $r3r2res $bladethicknessres) simpleGrading (1 1 1)
  hex (170 171 139 138 178 179 147 146) ($npolygon $r3r2res $bladethicknessres) simpleGrading (1 1 1)
  hex (171 172 140 139 179 180 148 147) ($npolygon $r3r2res $bladethicknessres) simpleGrading (1 1 1)

  hex (77 78 169 168 94 95 177 176) ($npolygon $r5r3res $bladethicknessres) simpleGrading (1 1 1) //half circle
  hex (78 79 170 169 95 96 178 177) ($npolygon $r5r3res $bladethicknessres) simpleGrading (1 1 1)
  hex (79 80 171 170 96 97 179 178) ($npolygon $r5r3res $bladethicknessres) simpleGrading (1 1 1)
  hex (80 81 172 171 97 98 180 179) ($npolygon $r5r3res $bladethicknessres) simpleGrading (1 1 1)

  //blade tip to top of blade
  hex (86 87 88 83 103 104 105 100) ($npolygon $npolygon $bladethicknessres) simpleGrading (1 1 1) //polygon
  hex (88 89 90 83 105 106 107 100) ($npolygon $npolygon $bladethicknessres) simpleGrading (1 1 1)

  hex (144 145 87 86 152 153 104 103) ($npolygon $drres $bladethicknessres) simpleGrading (1 1 1)
  hex (145 146 88 87 153 154 105 104) ($npolygon $drres $bladethicknessres) simpleGrading (1 1 1)
  hex (146 147 89 88 154 155 106 105) ($npolygon $drres $bladethicknessres) simpleGrading (1 1 1)
  hex (147 148 90 89 155 156 107 106) ($npolygon $drres $bladethicknessres) simpleGrading (1 1 1)

  hex (176 177 145 144 184 185 153 152) ($npolygon $r3r2res $bladethicknessres) simpleGrading (1 1 1)
  hex (177 178 146 145 185 186 154 153) ($npolygon $r3r2res $bladethicknessres) simpleGrading (1 1 1)
  hex (178 179 147 146 186 187 155 154) ($npolygon $r3r2res $bladethicknessres) simpleGrading (1 1 1)
  hex (179 180 148 147 187 188 156 155) ($npolygon $r3r2res $bladethicknessres) simpleGrading (1 1 1)

  hex (94 95 177 176 111 112 185 184) ($npolygon $r5r3res $bladethicknessres) simpleGrading (1 1 1)
  hex (95 96 178 177 112 113 186 185) ($npolygon $r5r3res $bladethicknessres) simpleGrading (1 1 1)
  hex (96 97 179 178 113 114 187 186) ($npolygon $r5r3res $bladethicknessres) simpleGrading (1 1 1)
  hex (97 98 180 179 114 115 188 187) ($npolygon $r5r3res $bladethicknessres) simpleGrading (1 1 1)
/**/
  //blade to top of cylinder
  hex (101 102 103 100 118 119 120 117) ($npolygon $npolygon $cylinderhres) simpleGrading (1 1 1) //polygon
  hex (103 104 105 100 120 121 122 117) ($npolygon $npolygon $cylinderhres) simpleGrading (1 1 1)
  hex (105 106 107 100 122 123 124 117) ($npolygon $npolygon $cylinderhres) simpleGrading (1 1 1)
  hex (107 108 101 100 124 125 118 117) ($npolygon $npolygon $cylinderhres) simpleGrading (1 1 1)

  hex (150 151 102 101 158 159 119 118) ($npolygon $drres $cylinderhres) simpleGrading (1 1 1) //polygon to r2
  hex (151 152 103 102 159 160 120 119) ($npolygon $drres $cylinderhres) simpleGrading (1 1 1)
  hex (152 153 104 103 160 161 121 120) ($npolygon $drres $cylinderhres) simpleGrading (1 1 1)
  hex (153 154 105 104 161 162 122 121) ($npolygon $drres $cylinderhres) simpleGrading (1 1 1)
  hex (154 155 106 105 162 163 123 122) ($npolygon $drres $cylinderhres) simpleGrading (1 1 1)
  hex (155 156 107 106 163 164 124 123) ($npolygon $drres $cylinderhres) simpleGrading (1 1 1)
  hex (156 157 108 107 164 165 125 124) ($npolygon $drres $cylinderhres) simpleGrading (1 1 1)
  hex (157 150 101 108 165 158 118 125) ($npolygon $drres $cylinderhres) simpleGrading (1 1 1)

  hex (182 183 151 150 190 191 159 158) ($npolygon $r3r2res $cylinderhres) simpleGrading (1 1 1) //r3 to r2
  hex (183 184 152 151 191 192 160 159) ($npolygon $r3r2res $cylinderhres) simpleGrading (1 1 1)
  hex (184 185 153 152 192 193 161 160) ($npolygon $r3r2res $cylinderhres) simpleGrading (1 1 1)
  hex (185 186 154 153 193 194 162 161) ($npolygon $r3r2res $cylinderhres) simpleGrading (1 1 1)
  hex (186 187 155 154 194 195 163 162) ($npolygon $r3r2res $cylinderhres) simpleGrading (1 1 1)
  hex (187 188 156 155 195 196 164 163) ($npolygon $r3r2res $cylinderhres) simpleGrading (1 1 1)
  hex (188 189 157 156 196 197 165 164) ($npolygon $r3r2res $cylinderhres) simpleGrading (1 1 1)
  hex (189 182 150 157 197 190 158 165) ($npolygon $r3r2res $cylinderhres) simpleGrading (1 1 1)

  hex (109 110 183 182 126 127 191 190) ($npolygon $r5r3res $cylinderhres) simpleGrading (1 1 1) //r3 to r5
  hex (110 111 184 183 127 128 192 191) ($npolygon $r5r3res $cylinderhres) simpleGrading (1 1 1)
  hex (111 112 185 184 128 129 193 192) ($npolygon $r5r3res $cylinderhres) simpleGrading (1 1 1)
  hex (112 113 186 185 129 130 194 193) ($npolygon $r5r3res $cylinderhres) simpleGrading (1 1 1)
  hex (113 114 187 186 130 131 195 194) ($npolygon $r5r3res $cylinderhres) simpleGrading (1 1 1)
  hex (114 115 188 187 131 132 196 195) ($npolygon $r5r3res $cylinderhres) simpleGrading (1 1 1)
  hex (115 116 189 188 132 133 197 196) ($npolygon $r5r3res $cylinderhres) simpleGrading (1 1 1)
  hex (116 109 182 189 133 126 190 197) ($npolygon $r5r3res $cylinderhres) simpleGrading (1 1 1)

  //Nozzle outside walls
  hex (50 51 35 34 58 59 43 42) ($npolygon $r5r3res $wallhres) simpleGrading (1 1 1)
  hex (51 52 36 35 59 60 44 43) ($npolygon $r5r3res $wallhres) simpleGrading (1 1 1)
  hex (52 53 37 36 60 61 45 44) ($npolygon $r5r3res $wallhres) simpleGrading (1 1 1)
  hex (53 54 38 37 61 62 46 45) ($npolygon $r5r3res $wallhres) simpleGrading (1 1 1)
  hex (54 55 39 38 62 63 47 46) ($npolygon $r5r3res $wallhres) simpleGrading (1 1 1)
  hex (55 56 40 39 63 64 48 47) ($npolygon $r5r3res $wallhres) simpleGrading (1 1 1)
  hex (56 57 41 40 64 65 49 48) ($npolygon $r5r3res $wallhres) simpleGrading (1 1 1)
  hex (57 50 34 41 65 58 42 49) ($npolygon $r5r3res $wallhres) simpleGrading (1 1 1) //79

);

//cylinder vertices for arc interpolation
x1 #calc "$cx+$r5*cos(M_PI/8)";
y1 #calc "$cy+$r5*sin(M_PI/8)";
x2 #calc "$cx+$r5*cos(3*M_PI/8)";
y2 #calc "$cy+$r5*sin(3*M_PI/8)";
x3 #calc "$cx+$r5*cos(5*M_PI/8)";
y3 #calc "$cy+$r5*sin(5*M_PI/8)";
x4 #calc "$cx+$r5*cos(7*M_PI/8)";
y4 #calc "$cy+$r5*sin(7*M_PI/8)";
x5 #calc "$cx+$r5*cos(9*M_PI/8)";
y5 #calc "$cy+$r5*sin(9*M_PI/8)";
x6 #calc "$cx+$r5*cos(11*M_PI/8)";
y6 #calc "$cy+$r5*sin(11*M_PI/8)";
x7 #calc "$cx+$r5*cos(13*M_PI/8)";
y7 #calc "$cy+$r5*sin(13*M_PI/8)";
x8 #calc "$cx+$r5*cos(15*M_PI/8)";
y8 #calc "$cy+$r5*sin(15*M_PI/8)";

edges
(
  //nozzle inlet
  arc 18 19 (#calc "$cx+$r1*cos(M_PI/8)" #calc "$cy+$r1*sin(M_PI/8)" $cz) //(cx+rcos45 cy+rcos45 0) bottom arc quadrant 1
  arc 19 20 (#calc "$cx+$r1*cos(3*M_PI/8)" #calc "$cy+$r1*sin(3*M_PI/8)" $cz)
  arc 20 21 (#calc "$cx+$r1*cos(5*M_PI/8)" #calc "$cy+$r1*sin(5*M_PI/8)" $cz)
  arc 21 22 (#calc "$cx+$r1*cos(7*M_PI/8)" #calc "$cy+$r1*sin(7*M_PI/8)" $cz)
  arc 22 23 (#calc "$cx+$r1*cos(9*M_PI/8)" #calc "$cy+$r1*sin(9*M_PI/8)" $cz)
  arc 23 24 (#calc "$cx+$r1*cos(11*M_PI/8)" #calc "$cy+$r1*sin(11*M_PI/8)" $cz)
  arc 24 25 (#calc "$cx+$r1*cos(13*M_PI/8)" #calc "$cy+$r1*sin(13*M_PI/8)" $cz)
  arc 25 18 (#calc "$cx+$r1*cos(15*M_PI/8)" #calc "$cy+$r1*sin(15*M_PI/8)" $cz)
//nozzel outlet
  arc 26 27 (#calc "$cx+$r2*cos(M_PI/8)" #calc "$cy+$r2*sin(M_PI/8)" $nozzleh)
  arc 27 28 (#calc "$cx+$r2*cos(3*M_PI/8)" #calc "$cy+$r2*sin(3*M_PI/8)" $nozzleh)
  arc 28 29 (#calc "$cx+$r2*cos(5*M_PI/8)" #calc "$cy+$r2*sin(5*M_PI/8)" $nozzleh)
  arc 29 30 (#calc "$cx+$r2*cos(7*M_PI/8)" #calc "$cy+$r2*sin(7*M_PI/8)" $nozzleh)
  arc 30 31 (#calc "$cx+$r2*cos(9*M_PI/8)" #calc "$cy+$r2*sin(9*M_PI/8)" $nozzleh)
  arc 31 32 (#calc "$cx+$r2*cos(11*M_PI/8)" #calc "$cy+$r2*sin(11*M_PI/8)" $nozzleh)
  arc 32 33 (#calc "$cx+$r2*cos(13*M_PI/8)" #calc "$cy+$r2*sin(13*M_PI/8)" $nozzleh)
  arc 33 26 (#calc "$cx+$r2*cos(15*M_PI/8)" #calc "$cy+$r2*sin(15*M_PI/8)" $nozzleh)

  arc 58 59 ($x1 $y1 $nozzleh) //bladeheight bottom arc
  arc 59 60 ($x2 $y2 $nozzleh)
  arc 60 61 ($x3 $y3 $nozzleh)
  arc 61 62 ($x4 $y4 $nozzleh)
  arc 62 63 ($x5 $y5 $nozzleh)
  arc 63 64 ($x6 $y6 $nozzleh)
  arc 64 65 ($x7 $y7 $nozzleh)
  arc 65 58 ($x8 $y8 $nozzleh)

//blade height space bottom of blade
  arc 75 76 ($x1 $y1 $bladeh) //bladeheight top arc
  arc 76 77 ($x2 $y2 $bladeh)
  arc 77 78 ($x3 $y3 $bladeh)
  arc 78 79 ($x4 $y4 $bladeh)
  arc 79 80 ($x5 $y5 $bladeh)
  arc 80 81 ($x6 $y6 $bladeh)
  arc 81 82 ($x7 $y7 $bladeh)
  arc 82 75 ($x8 $y8 $bladeh)

//blade tip layer
  arc 94 95 ($x3 $y3 $bladecenter)
  arc 95 96 ($x4 $y4 $bladecenter)
  arc 96 97 ($x5 $y5 $bladecenter)
  arc 97 98 ($x6 $y6 $bladecenter)

  //blade top layer
  arc 109 110 ($x1 $y1 $bladetop)
  arc 110 111 ($x2 $y2 $bladetop)
  arc 111 112 ($x3 $y3 $bladetop)
  arc 112 113 ($x4 $y4 $bladetop)
  arc 113 114 ($x5 $y5 $bladetop)
  arc 114 115 ($x6 $y6 $bladetop)
  arc 115 116 ($x7 $y7 $bladetop)
  arc 116 109 ($x8 $y8 $bladetop)

  //cylinder top
  arc 126 127 ($x1 $y1 $cylinderh) //cylinderheight top arc
  arc 127 128 ($x2 $y2 $cylinderh)
  arc 128 129 ($x3 $y3 $cylinderh)
  arc 129 130 ($x4 $y4 $cylinderh)
  arc 130 131 ($x5 $y5 $cylinderh)
  arc 131 132 ($x6 $y6 $cylinderh)
  arc 132 133 ($x7 $y7 $cylinderh)
  arc 133 126 ($x8 $y8 $cylinderh)
/**/
//nozzle wall outsides
  arc 34 35 (#calc "$cx+$r4*cos(M_PI/8)" #calc "$cy+$r4*sin(M_PI/8)" $wh) //bottom nozzle wall
  arc 35 36 (#calc "$cx+$r4*cos(3*M_PI/8)" #calc "$cy+$r4*sin(3*M_PI/8)" $wh)
  arc 36 37 (#calc "$cx+$r4*cos(5*M_PI/8)" #calc "$cy+$r4*sin(5*M_PI/8)" $wh)
  arc 37 38 (#calc "$cx+$r4*cos(7*M_PI/8)" #calc "$cy+$r4*sin(7*M_PI/8)" $wh)
  arc 38 39 (#calc "$cx+$r4*cos(9*M_PI/8)" #calc "$cy+$r4*sin(9*M_PI/8)" $wh)
  arc 39 40 (#calc "$cx+$r4*cos(11*M_PI/8)" #calc "$cy+$r4*sin(11*M_PI/8)" $wh)
  arc 40 41 (#calc "$cx+$r4*cos(13*M_PI/8)" #calc "$cy+$r4*sin(13*M_PI/8)" $wh)
  arc 41 34 (#calc "$cx+$r4*cos(15*M_PI/8)" #calc "$cy+$r4*sin(15*M_PI/8)" $wh)

  arc 50 51 ($x1 $y1 $wh) //botom space
  arc 51 52 ($x2 $y2 $wh)
  arc 52 53 ($x3 $y3 $wh)
  arc 53 54 ($x4 $y4 $wh)
  arc 54 55 ($x5 $y5 $wh)
  arc 55 56 ($x6 $y6 $wh)
  arc 56 57 ($x7 $y7 $wh)
  arc 57 50 ($x8 $y8 $wh)

  arc 42 43 (#calc "$cx+$r3*cos(M_PI/8)" #calc "$cy+$r3*sin(M_PI/8)" $nozzleh)  //top nozzle walls
  arc 43 44 (#calc "$cx+$r3*cos(3*M_PI/8)" #calc "$cy+$r3*sin(3*M_PI/8)" $nozzleh)
  arc 44 45 (#calc "$cx+$r3*cos(5*M_PI/8)" #calc "$cy+$r3*sin(5*M_PI/8)" $nozzleh)
  arc 45 46 (#calc "$cx+$r3*cos(7*M_PI/8)" #calc "$cy+$r3*sin(7*M_PI/8)" $nozzleh)
  arc 46 47 (#calc "$cx+$r3*cos(9*M_PI/8)" #calc "$cy+$r3*sin(9*M_PI/8)" $nozzleh)
  arc 47 48 (#calc "$cx+$r3*cos(11*M_PI/8)" #calc "$cy+$r3*sin(11*M_PI/8)" $nozzleh)
  arc 48 49 (#calc "$cx+$r3*cos(13*M_PI/8)" #calc "$cy+$r3*sin(13*M_PI/8)" $nozzleh)
  arc 49 42 (#calc "$cx+$r3*cos(15*M_PI/8)" #calc "$cy+$r3*sin(15*M_PI/8)" $nozzleh)

);

patches
( //faces all point out using the right hand rule
    patch outlet
    (
      (34 35 51 50) //r4 to r5 from all to space
      (35 36 52 51)
      (36 37 53 52)
      (37 38 54 53)
      (38 39 55 54)
      (39 40 56 55)
      (40 41 57 56)
      (41 34 50 57)

      (50 51 59 58) //space outside nozzle wall
      (51 52 60 59)
      (52 53 61 60)
      (53 54 62 61)
      (54 55 63 62)
      (55 56 64 63)
      (56 57 65 64)
      (57 50 58 65)

      (58 59 76 75) //nozzle to blade bottom
      (59 60 77 76)
      (60 61 78 77)
      (61 62 79 78)
      (62 63 80 79)
      (63 64 81 80)
      (64 65 82 81)
      (65 58 75 82)

      (77 78 95 94) // blade bottom to tip
      (78 79 96 95)
      (79 80 97 96)
      (80 81 98 97)

      (94 95 112 111) //blade tip to blade top
      (95 96 113 112)
      (96 97 114 113)
      (97 98 115 114)

      (109 110 127 126) //blade top to cylinder top
      (110 111 128 127)
      (111 112 129 128)
      (112 113 130 129)
      (113 114 131 130)
      (114 115 132 131)
      (115 116 133 132)
      (116 109 126 133)

      (118 119 120 117) //top polygon
      (120 121 122 117)
      (122 123 124 117)
      (124 125 118 117)

      (158 159 119 118) //polygon to r2 at top of cylinder
      (159 160 120 119)
      (160 161 121 120)
      (161 162 122 121)
      (162 163 123 122)
      (163 164 124 123)
      (164 165 125 124)
      (165 158 118 125)

      (190 191 159 158) //r3 to r2 to top of cylinder
      (191 192 160 159)
      (192 193 161 160)
      (193 194 162 161)
      (194 195 163 162)
      (195 196 164 163)
      (196 197 165 164)
      (197 190 158 165)

      (126 127 191 190) //r3 to r5 at top of cylinder
      (127 128 192 191)
      (128 129 193 192)
      (129 130 194 193)
      (130 131 195 194)
      (131 132 196 195)
      (132 133 197 196)
      (133 126 190 197)
/**/
    )
    patch inlet
    (
      (0 8 2 1) //polygons
      (2 8 4 3)
      (4 8 6 5)
      (6 8 0 7)
      (18 0 1 19) //arcs
      (19 1 2 20)
      (20 2 3 21)
      (21 3 4 22)
      (22 4 5 23)
      (23 5 6 24)
      (24 6 7 25)
      (25 7 0 18)
    )
    wall obstacle
    (
      (18 19 27 26) //nozzle
      (19 20 28 27)
      (20 21 29 28)
      (21 22 30 29)
      (22 23 31 30)
      (23 24 32 31)
      (24 25 33 32)
      (25 18 26 33)

      (26 27 43 42) //nozzle to outside r2 to r3
      (27 28 44 43)
      (28 29 45 44)
      (29 30 46 45)
      (30 31 47 46)
      (31 32 48 47)
      (32 33 49 48)
      (33 26 42 49)

      (42 43 35 34) //r3 to r4
      (43 44 36 35)
      (44 45 37 36)
      (45 46 38 37)
      (46 47 39 38)
      (47 48 40 39)
      (48 49 41 40)
      (49 42 34 41)

      //blade bottom
      (67 68 69 66) //blade bottom polygon
      (73 74 67 66)

      (134 135 68 67)//bolade bottom outer polygon
      (135 136 69 68)
      (140 141 74 73)
      (141 134 67 74)

      (166 167 135 134) //blade bottom r2 to r3
      (167 168 136 135)
      (172 173 141 140)
      (173 166 134 141)

      (75 76 167 166) //blade bottom r3 to r5
      (76 77 168 167)
      (81 82 173 172)
      (82 75 166 173)

      //blade top
      (100 103 102 101) //polygon
      (100 101 108 107)

      (101 102 151 150) //outer polygon
      (102 103 152 151)
      (107 108 157 156)
      (108 101 150 157)

      (150 151 183 182) //r2 to r3
      (151 152 184 183)
      (156 157 189 188)
      (157 150 182 189)

      (182 183 110 109) //r3 to r5
      (183 184 111 110)
      (188 189 116 115)
      (189 182 109 116)

      //blade bottom to bladetip
      (66 69 86 83)//polygons
      (73 66 83 90)
      (69 136 144 86) //outer polygon
      (140 73 90 148)
      (136 168 176 144) //r2 to r3
      (172 140 148 180)
      (168 77 94 176) //r2 to r5
      (81 172 180 98)

      //blade tip to blade top
      (83 86 103 100)//polygons
      (90 83 100 107)
      (86 144 152 103)//outer polygon
      (148 90 107 156)
      (144 176 184 152)//r3 to r3
      (180 148 156 188)
      (176 94 111 184) //r3 to r5
      (98 180 188 115)

    )
);



mergePatchPairs
(
);

// ************************************************************************* //
